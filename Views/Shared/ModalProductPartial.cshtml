@model ProductoVM
<style>
        .error {
            color: red;
            font-size: 0.9em;
        }
    </style>
<div>
    <form name="createProductForm" id="createProduct">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" name="ProductoID" value="@Model.Producto.ProductoID" />
        <div class="form-group">
            <label for="Descripcion">Descripcion:</label>
            <input type="text" id="Descripcion" name="Descripcion" value="@Model.Producto.Descripcion" class="form-control" />
            <span asp-validation-for="Producto.Descripcion" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label for="PrecioVenta">Precio de Venta:</label>
            <input type="text" id="PrecioVenta" name="PrecioVenta" value="@Model.Producto.PrecioVenta" class="form-control"/>
            <span asp-validation-for="Producto.PrecioVenta" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label for="StockMinimo">Stock Minimo:</label>
            <input type="text" id="StockMinimo" name="StockMinimo" value="@Model.Producto.StockMinimo" class="form-control" />
            <span asp-validation-for="Producto.StockMinimo" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label for="StockActual">Stock Actual:</label>
            <input type="text" id="StockActual" name="StockActual" value="@Model.Producto.StockActual" class="form-control" />
            <span asp-validation-for="Producto.StockActual" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label for="FechaDeVenta">Fecha de Venta</label>
            <input type="date" id="FechaDeVenta" name="FechaDeVenta" value="@Model.Producto.FechaDeVenta.ToString("yyyy-MM-dd")" class="form-control" />
            <span class="text-danger"></span>
            <span asp-validation-for="Producto.FechaDeVenta" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label for="Categoria" name="CategoriaID" >Categoria:</label>
            <select asp-for="Producto.Categoria.CategoriaID" name="CategoriaID" id="CategoriaID" asp-items="@Model.Categoria" class="form-select">
                <option value="0">Seleccione una Categoria</option>
            </select>
            <span asp-validation-for="Categoria"  class="text-danger"></span>
        </div>
        <div class="form-group">
            <input type="submit" class="btn btn-success" value="Guardar" />
            <button type="button" id="CancelarButton" class="btn btn-danger" data-bs-dismiss="modal">Cancelar</button>
        </div>
    </form>
</div>
<script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.js"></script>
<script>
    $(document).ready(function () {
        $.validator.addMethod("valueNotEquals", function (value, element, arg) {
            // I use element.value instead value here, value parameter was always null
            return arg != element.value;
        }, "Value must not equal arg.");

        $("#createProduct").validate({
            rules: {
                Descripcion: {
                    required: true,
                    minlength: 3
                },
                PrecioVenta: {
                    required: true,
                    number: true,
                    min: 0
                },
                StockMinimo: {
                    required: true,
                    number: true,
                    min: 0
                },
                StockActual: {
                    required: true,
                    number: true,
                    min: 0
                },
                FechaDeVenta: {
                    required: true,
                    date : true
                },
                CategoriaID: {
                    valueNotEquals: "0" 
                }
            },
            messages: {
                Descripcion: "Por favor, ingrese una descripción válida.",
                PrecioVenta: "El precio de venta debe ser un número o decimal.",
                StockMinimo: "El stock mínimo debe ser un número.",
                StockActual: "El stock actual debe ser un número.",
                FechaDeVenta: {
                    required: "Por favor, ingrese una fecha.",
                    date: "fecha valida"
                },
                CategoriaID: {
                    valueNotEquals: "Seleccione una Categoria."
                }
            },
                submitHandler: function (form) {
                    Guardar(); 
            }
        });
       
    });
    function Guardar() {
        var formData = $('#createProduct').serialize(); // Serializa los datos del formulario
        console.log(formData);
        $.ajax({
            type: "POST",
            url: "/Productos/Guardar",
            data: formData,
            success: function (response) {
                Swal.fire({
                    title: response.message,
                    icon: "success"
                });
                CargarProductos();
                $('#ViewProductModal').modal('hide');
            },
            error: function () {
                Swal.fire({
                    title: 'Hubo un error al crear o actualizar el Producto.',
                    icon: "error"
                });
                $('#ViewProductModal').modal('hide');
            }
        });
    }
</script>